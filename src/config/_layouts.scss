// Dependencies
@use 'sass:list';

@use 'config/grid' as *;
@use 'config/tokens';
@use 'config/dimensions';
@use 'config/direction';
@use 'config/media';

// Variables
$layouts: map-get(tokens.$tokens, 'layouts');

// Mixins

@mixin auto() {
  margin-left: auto;
  margin-right: auto;
}

// CSS Grid Mixins

@mixin grid-base($justify: stretch) {
  display: grid;
  justify-content: $justify;
}

@mixin grid-gap($gaps: (dimensions.$spacing-base, dimensions.$spacing-base)) {
  row-gap: list.nth($gaps, 1); // x
  gap: list.nth($gaps, 2); // y
}

@mixin grid-template-columns($repeat) {
  grid-template-columns: repeat(#{$repeat}, minmax(0, 1fr));
}

// Wrap

@mixin wrap() {
  padding-left: (dimensions.$spacing-base / 3) * 2;
  padding-right: (dimensions.$spacing-base / 3) * 2;

  @include media.screen-and-min-width('tablet') {
    padding-left: dimensions.$spacing-base;
    padding-right: dimensions.$spacing-base
  }
}

@mixin wrap-end() {
  padding-#{direction.$end}: (dimensions.$spacing-base / 3) * 2;

  @include media.screen-and-min-width('tablet') {
    padding-#{direction.$end}: dimensions.$spacing-base;
  }
}

@mixin wrap-start() {
  padding-#{direction.$start}: (dimensions.$spacing-base / 3) * 2;

  @include media.screen-and-min-width('tablet') {
    padding-#{direction.$start}: dimensions.$spacing-base;
  }
}

// Page Wrapper Mixins

@mixin page-min-max() {
  @include auto();
  max-width: dimensions.get('site-max-width');
  min-width: dimensions.get('site-min-width');
}

@mixin page-min-max-selector($variant: '') {
  .#{$variant}page-min-max {
    @include page-min-max();
  }
}

@mixin page-min() {
  @include auto();
  min-width: dimensions.get('site-min-width');
}

@mixin page-min-selector($variant: '') {
  .#{$variant}page-min {
    @include page-min();
  }
}

@mixin page-max() {
  @include auto();
  max-width: dimensions.get('site-max-width');
}

@mixin page-max-selector($variant: '') {
  .#{$variant}page-max {
    @include page-max();
  }
}

// Row Layouts

@mixin rows() {
  > *,
  > .layout__column {
    width: 100%;
  }
}

@mixin rows-selector($variant: '') {
  .#{$variant}layout-rows {
    @include rows();
  }
}

@mixin rows-gutter() {
  > *,
  > .layout__column {
    width: 100%;
    // margin-bottom: dimensions.$spacing-base
  }
}

@mixin rows-gutter-selector($variant: '') {
  .#{$variant}layout-rows-gutter {
    @include rows-gutter();
  }
}

// Column Layouts

@mixin columns($count: 2, $gutter: false) {
  @include grid-base();
  @include grid-template-columns($count);

  @if $gutter {
    $gaps: (dimensions.$spacing-base * $gutter, dimensions.$spacing-base * $gutter);

    @include grid-gap($gaps);
  }
}

// 4

@mixin four-columns() {
  @include columns(4);
}

@mixin four-columns-gutter($gutter: 1) {
  @include columns(4, $gutter);
}

@mixin four-columns-selector($variant: '') {
  .#{$variant}layout-four-columns,
  .#{$variant}layout-col-4 {
    @include four-columns();
  }
}

@mixin four-columns-gutter-selector($variant: '') {
  .#{$variant}layout-four-columns-gutter,
  .#{$variant}layout-col-4-gap {
    @include four-columns-gutter();
  }
}

@mixin four-columns-gutter-2-selector($variant: '') {
  .#{$variant}layout-four-columns-gutter,
  .#{$variant}layout-col-4-gap-2 {
    @include four-columns-gutter(2);
  }
}

// 3

@mixin three-columns() {
  @include columns(3);
}

@mixin three-columns-gutter($gutter: 1) {
  @include columns(3, $gutter);
}

@mixin three-columns-selector($variant: '') {
  .#{$variant}layout-three-columns,
  .#{$variant}layout-col-3 {
    @include three-columns();
  }
}

@mixin three-columns-gutter-selector($variant: '') {
  .#{$variant}layout-three-columns-gutter,
  .#{$variant}layout-col-3-gap {
    @include three-columns-gutter();
  }
}

@mixin three-columns-gutter-2-selector($variant: '') {
  .#{$variant}layout-three-columns-gutter-2,
  .#{$variant}layout-col-3-gap-2 {
    @include three-columns-gutter(2);
  }
}

// 2

@mixin two-columns() {
  @include columns(2);
}

@mixin two-columns-gutter($gutter: 1) {
  @include columns(2, $gutter);
}

@mixin two-columns-selector($variant: '') {
  .#{$variant}layout-two-columns,
  .#{$variant}layout-col-2 {
    @include two-columns();
  }
}

@mixin two-columns-gutter-selector($variant: '') {
  .#{$variant}layout-two-columns-gutter,
  .#{$variant}layout-col-2-gap {
    @include two-columns-gutter();
  }
}

@mixin two-columns-gutter-2-selector($variant: '') {
  .#{$variant}layout-two-columns-gutter-2,
  .#{$variant}layout-col-2-gap-2 {
    @include two-columns-gutter(2);
  }
}

// Special Layouts

@mixin sidebar() {
  display: flex;
  align-items: stretch;

  > *:first-child,
  > .layout__column:first-child {
    width: dimensions.get('side-bar-width');
    max-width: dimensions.get('side-bar-width');
    flex-basis: dimensions.get('side-bar-width')
  }

  > *:first-child + *,
  > .layout__column:first-child + .layout__column {
    width: calc(100% - #{dimensions.get('side-bar-width')});
    max-width: calc(100% - #{dimensions.get('side-bar-width')});
    flex-basis: calc(100% - #{dimensions.get('side-bar-width')})
  }
}

@mixin sidebar-selector($variant: '') {
  .#{$variant}layout-sidebar {
    @include sidebar();
  }
}

@mixin sidebar-small() {
  display: flex;
  align-items: stretch;

  > *:first-child,
  > .layout__column:first-child {
    width: dimensions.get('side-bar-width-small');
    max-width: dimensions.get('side-bar-width-small');
    flex-basis: dimensions.get('side-bar-width-small')
  }

  > *:first-child + *,
  > .layout__column:first-child + .layout__column {
    width: calc(100% - #{dimensions.get('side-bar-width-small')});
    max-width: calc(100% - #{dimensions.get('side-bar-width-small')});
    flex-basis: calc(100% - #{dimensions.get('side-bar-width-small')})
  }
}

@mixin sidebar-small-selector($variant: '') {
  .#{$variant}layout-sidebar-small {
    @include sidebar-small();
  }
}

@mixin sidebar-gutter() {
  display: flex;
  align-items: stretch;

  > *:first-child,
  > .layout__column:first-child {
    width: dimensions.get('side-bar-width');
    max-width: dimensions.get('side-bar-width');
    flex-basis: dimensions.get('side-bar-width');
    margin-#{direction.$end}: dimensions.$spacing-base;
  }

  > *:first-child + *,
  > .layout__column:first-child + .layout__column {
    width: calc(100% - #{dimensions.get('side-bar-width')} - #{dimensions.$spacing-base});
    max-width: calc(100% - #{dimensions.get('side-bar-width')} - #{dimensions.$spacing-base});
    flex-basis: calc(100% - #{dimensions.get('side-bar-width')} - #{dimensions.$spacing-base})
  }
}

@mixin sidebar-gutter-selector($variant: '') {
  .#{$variant}layout-sidebar-gutter {
    @include sidebar-gutter();
  }
}

@mixin sidebar-small-gutter() {
  display: flex;
  align-items: stretch;

  > *:first-child,
  > .layout__column:first-child {
    width: dimensions.get('side-bar-width-small');
    max-width: dimensions.get('side-bar-width-small');
    flex-basis: dimensions.get('side-bar-width-small');
    margin-#{direction.$end}: dimensions.$spacing-base;
  }

  > *:first-child + *,
  > .layout__column:first-child + .layout__column {
    width: calc(100% - #{dimensions.get('side-bar-width-small')} - #{dimensions.$spacing-base});
    max-width: calc(100% - #{dimensions.get('side-bar-width-small')} - #{dimensions.$spacing-base});
    flex-basis: calc(100% - #{dimensions.get('side-bar-width-small')} - #{dimensions.$spacing-base})
  }
}

@mixin sidebar-small-gutter-selector($variant: '') {
  .#{$variant}layout-sidebar-small-gutter {
    @include sidebar-small-gutter();
  }
}

@mixin content() {
  align-items: center;

  > *:first-child,
  > .layout__column:first-child {
    @include auto();
    max-width: dimensions.get('content-width')
  }
}

@mixin content-selector($variant: '') {
  .#{$variant}layout-content {
    @include content();
  }
}

@mixin topbar-selector($variant: '') {
  .#{$variant}layout-topbar {
    > *:first-child {
      height: dimensions.get('topbar-height')
    }
  }

  .#{$variant}layout-topbar {
    > *:first-child + * {
      position: relative;
      height: calc(100vh - #{dimensions.get('topbar-height')});
      overflow: hidden
    }
  }

  .#{$variant}layout-topbar {
    > *:first-child + * > *:first-child {
      width: 100%;
      position: absolute;
      top: 0;
      right: 0;
      height: 100%;
      overflow: scroll;
      -webkit-overflow-scrolling: touch
    }
  }

  .#{$variant}layout-topbar {
    > *:first-child + * > *:first-child:after {
      content: '';
      height: 100%;
      display: block
    }
  }
}

@mixin map {
  .layout-map {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column-reverse;

    @include media.screen-and-min-width('desktop') {
      height: 90vh;
      flex-direction: row
    }

    .layout-map__sidebar {
      width: 100%;
      max-width: 100%;

      @include media.screen-and-min-width('desktop') {
        height: 90vh;
        overflow: hidden;
        overflow-y: auto
      }
    }

    .layout-map__map {
      height: 50vh;
      width: 100%;
      max-width: 100%;

      @include media.screen-and-min-width('desktop') {
        height: 100%
      }
    }
  }
}

@mixin print {
  .page-wrapper {
    display: block
  }

  .layout-topbar {
    > *:first-child + * {
      position: static;
      height: auto;
    }
  }

  .layout-topbar {
    > *:first-child + * > *:first-child {
      position: static
    }
  }
}
