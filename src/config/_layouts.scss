// Dependencies
@use 'config/grid' as *;
@use 'config/tokens';
@use 'config/dimensions';
@use 'config/direction';
@use 'config/media';

// Variables
$layouts: map-get(tokens.$tokens, 'layouts');

// Mixins
@mixin wrap() {
  padding-left: (dimensions.$spacing-base / 3) * 2;
  padding-right: (dimensions.$spacing-base / 3) * 2;

  @include media.screen-and-min-width('tablet') {
    padding-left: dimensions.$spacing-base;
    padding-right: dimensions.$spacing-base
  }
}

@mixin auto() {
  margin-left: auto;
  margin-right: auto;
}

@mixin page-min-max($variant) {
  .#{$variant}page-min-max {
    @include auto();
    max-width: dimensions.get('site-max-width');
    min-width: dimensions.get('site-min-width');
  }
}

@mixin page-min($variant) {
  .#{$variant}page-min {
    @include auto();
    min-width: dimensions.get('site-min-width');
  }
}

@mixin page-max($variant) {
  .#{$variant}page-max {
    @include auto();
    max-width: dimensions.get('site-max-width');
  }
}

@mixin columns($variant) {
  .#{$variant}layout-columns {
    display: flex;
    flex-wrap: wrap;

    > *,
    > .layout__column {
      width: 50%;
      max-width: 50%
    }
  }
}

@mixin rows($variant) {
  .#{$variant}layout-rows {
    display: flex;
    flex-wrap: wrap;

    > *,
    > .layout__column {
      height: 50%;
      width: 100%;
      max-width: 100%;
      flex-basis: 100%
    }
  }
}

@mixin gutter($variant) {
  .#{$variant}layout-gutter {
    > *,
    > .layout__column {
      width: 100%;
      margin-bottom: dimensions.$spacing-base
    }

    > *:last-child,
    > .layout__column:last-child {
      margin-bottom: 0
    }
  }
}

@mixin columns-gutter($variant) {
  .#{$variant}layout-columns-gutter {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;

    > *,
    > .layout__column {
      margin-bottom: dimensions.$spacing-base;
      width: calc(50% - #{dimensions.$spacing-base});
      max-width: calc(50% - #{dimensions.$spacing-base});
      flex-basis: calc(50% - #{dimensions.$spacing-base})
    }

    > *:nth-last-child(1),
    > *:nth-last-child(2),
    > .layout__column:nth-last-child(1),
    > .layout__column:nth-last-child(2) {
      margin-bottom: 0
    }
  }
}

@mixin four-columns($variant) {
  .#{$variant}layout-four-columns {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;

    > *,
    > .layout__column {
      width: 25%;
      max-width: 25%;
      flex-basis: 25%
    }

    > *,
    > .layout__column {
      margin-bottom: dimensions.$spacing-base
    }
  }
}

@mixin four-columns-gutter($variant) {
  .#{$variant}layout-four-columns-gutter {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;

    > *,
    > .layout__column {
      width: calc(25% - #{dimensions.$spacing-base / 3});
      max-width: calc(25% - #{dimensions.$spacing-base / 3});
      flex-basis: calc(25% - #{dimensions.$spacing-base / 3})
    }

    > *,
    > .layout__column {
      margin-bottom: dimensions.$spacing-base
    }
  }
}

@mixin three-columns($variant) {
  .#{$variant}layout-three-columns {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;

    > *,
    > .layout__column {
      width: 33.33%;
      max-width: 33.33%;
      flex-basis: 33.33%
    }
  }
}

@mixin three-columns-gutter($variant) {
  .#{$variant}layout-three-columns-gutter {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;

    > *,
    > .layout__column {
      width: calc(33.33% - #{$grid * 2});
      max-width: calc(33.33% - #{$grid * 2});
      flex-basis: calc(33.33% - #{$grid * 2})
    }

    > *,
    > .layout__column {
      margin-bottom: dimensions.$spacing-base
    }
  }
}

@mixin two-columns($variant) {
  .#{$variant}layout-two-columns {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;

    > *,
    > .layout__column,
    &:after {
      width: 50%;
      max-width: 50%;
      flex-basis: 50%
    }

    &:after {
      content: '';
      margin-bottom: 0
    }
  }
}

@mixin two-columns-gutter($variant) {
  .#{$variant}layout-two-columns-gutter {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;

    > *,
    > .layout__column,
    &:after {
      width: calc(50% - #{dimensions.$spacing-base});
      max-width: calc(50% - #{dimensions.$spacing-base});
      flex-basis: calc(50% - #{dimensions.$spacing-base})
    }

    > *,
    > .layout__column, {
      margin-bottom: dimensions.$spacing-base
    }

    &:after {
      content: '';
      margin-bottom: 0;
    }
  }
}

@mixin sidebar($variant) {
  .#{$variant}layout-sidebar {
    display: flex;
    align-items: stretch;

    > *:first-child,
    > .layout__column:first-child {
      width: dimensions.get('side-bar-width');
      max-width: dimensions.get('side-bar-width');
      flex-basis: dimensions.get('side-bar-width')
    }

    > *:first-child + *,
    > .layout__column:first-child + .layout__column {
      width: calc(100% - #{dimensions.get('side-bar-width')});
      max-width: calc(100% - #{dimensions.get('side-bar-width')});
      flex-basis: calc(100% - #{dimensions.get('side-bar-width')})
    }
  }
}

@mixin sidebar-small($variant) {
  .#{$variant}layout-sidebar-small {
    display: flex;
    align-items: stretch;

    > *:first-child,
    > .layout__column:first-child {
      width: dimensions.get('side-bar-width-small');
      max-width: dimensions.get('side-bar-width-small');
      flex-basis: dimensions.get('side-bar-width-small')
    }

    > *:first-child + *,
    > .layout__column:first-child + .layout__column {
      width: calc(100% - #{dimensions.get('side-bar-width-small')});
      max-width: calc(100% - #{dimensions.get('side-bar-width-small')});
      flex-basis: calc(100% - #{dimensions.get('side-bar-width-small')})
    }
  }
}

@mixin sidebar-gutter($variant) {
  .#{$variant}layout-sidebar-gutter {
    display: flex;
    align-items: stretch;

    > *,
    > .layout__column {
      margin-bottom: 0
    }

    > *:first-child,
    > .layout__column:first-child {
      width: dimensions.get('side-bar-width');
      max-width: dimensions.get('side-bar-width');
      flex-basis: dimensions.get('side-bar-width');
      margin-#{direction.$end}: dimensions.$spacing-base;
    }

    > *:first-child + *,
    > .layout__column:first-child + .layout__column {
      width: calc(100% - #{dimensions.get('side-bar-width')} - #{dimensions.$spacing-base});
      max-width: calc(100% - #{dimensions.get('side-bar-width')} - #{dimensions.$spacing-base});
      flex-basis: calc(100% - #{dimensions.get('side-bar-width')} - #{dimensions.$spacing-base})
    }
  }
}

@mixin sidebar-small-gutter($variant) {
  .#{$variant}layout-sidebar-small-gutter {
    display: flex;
    align-items: stretch;

    > *,
    > .layout__column {
      margin-bottom: 0
    }

    > *:first-child,
    > .layout__column:first-child {
      width: dimensions.get('side-bar-width-small');
      max-width: dimensions.get('side-bar-width-small');
      flex-basis: dimensions.get('side-bar-width-small');
      margin-#{direction.$end}: dimensions.$spacing-base;
    }

    > *:first-child + *,
    > .layout__column:first-child + .layout__column {
      width: calc(100% - #{dimensions.get('side-bar-width-small')} - #{dimensions.$spacing-base});
      max-width: calc(100% - #{dimensions.get('side-bar-width-small')} - #{dimensions.$spacing-base});
      flex-basis: calc(100% - #{dimensions.get('side-bar-width-small')} - #{dimensions.$spacing-base})
    }
  }
}

@mixin content($variant) {
  .#{$variant}layout-content {
    align-items: center;

    > *:first-child,
    > .layout__column:first-child {
      @include auto();
      max-width: dimensions.get('content-width') + (dimensions.$spacing-base * 2)
    }
  }
}

@mixin topbar($variant) {
  .#{$variant}layout-topbar {
    > *:first-child {
      height: dimensions.get('topbar-height')
    }
  }

  .#{$variant}layout-topbar {
    > *:first-child + * {
      position: relative;
      height: calc(100vh - #{dimensions.get('topbar-height')});
      overflow: hidden
    }
  }

  .#{$variant}layout-topbar {
    > *:first-child + * > *:first-child {
      width: 100%;
      position: absolute;
      top: 0;
      right: 0;
      height: 100%;
      overflow: scroll;
      -webkit-overflow-scrolling: touch
    }
  }

  .#{$variant}layout-topbar {
    > *:first-child + * > *:first-child:after {
      content: '';
      height: 100%;
      display: block
    }
  }
}

@mixin map {
  .layout-map {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column-reverse;

    @include media.screen-and-min-width('desktop') {
      height: 90vh;
      flex-direction: row
    }

    .layout-map__sidebar {
      width: 100%;
      max-width: 100%;

      @include media.screen-and-min-width('desktop') {
        height: 90vh;
        overflow: hidden;
        overflow-y: auto
      }
    }

    .layout-map__map {
      height: 50vh;
      width: 100%;
      max-width: 100%;

      @include media.screen-and-min-width('desktop') {
        height: 100%
      }
    }
  }
}

@mixin print {
  .page-wrapper {
    display: block
  }

  .layout-topbar {
    > *:first-child + * {
      position: static;
      height: auto;
    }
  }

  .layout-topbar {
    > *:first-child + * > *:first-child {
      position: static
    }
  }
}