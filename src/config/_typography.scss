//
// Mixins
//

@use 'config/tokens';
@use 'config/language';

$typography: map-get(tokens.$tokens, 'typography');

$font: map-get(tokens.$tokens, 'font');
$font-family: map-get(tokens.$tokens, 'font-family');
$font-size: map-get(tokens.$tokens, 'font-size');
$font-weight: map-get(tokens.$tokens, 'font-weight');
$line-height: map-get(tokens.$tokens, 'line-height');

/**
 * Get a token value from the $typography set
 *
 * @param   {String}  $token  [$token description]
 *
 * @return  {Mixed}           The token value
 */
 @function get($token) {
  @return map-get($typography, $token);
}

@mixin font-family($key: 'body') {
  $font-family-key: '#{map-get($font, $key)}-#{language.$language}';

  @if language.$language == '' {
    $font-family-key: '#{map-get($font, $key)}';
  }

  font-family: map-get($font-family, $font-family-key);
}

@mixin set($key: 'body') {
  @include font-family($key);

  font-size: map-get($font-size, $key);
  font-weight: map-get($font-weight, $key);
  line-height: map-get($line-height, $key);
}

@mixin selector-body-elements() {
  p, ul, ol, li {
    @content;
  }
}

@mixin selector-lists() {
  ul, ol {
    @content;
  }
}

@mixin font-smooth() {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin font-smooth-auto() {
  -webkit-font-smoothing: auto;
  -moz-osx-font-smoothing: auto;
}
