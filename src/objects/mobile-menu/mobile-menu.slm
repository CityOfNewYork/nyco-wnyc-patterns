/ Mobile Menu

/ Defaults
- this.mobileMenu = {}
- this.mobileMenu.id = this.createId()
- this.mobileMenu.ariaHidden = false
- this.mobileMenu.tabindex = false

/ Inherit overrides
- if (typeof mobileMenu !== 'undefined')
  - this.mobileMenu = Object.assign(this.mobileMenu, mobileMenu);

/! { @id     Identifies the Mobile Menu for toggling }
/! { @class  Add "o-mobile-menu-fixed" in production layouts }
aside#aria-c-mobile-menu class='o-mobile-menu ${this.mobileMenu.class}' aria-hidden=this.mobileMenu.ariaHidden
  div class='o-mobile-menu__close'
    /! { @tabindex       Add tabindex="-1" to insure focusable elements are not visible when parent is hidden }
    /! { @aria-controls  Targets the Mobile Menu ID for toggling }
    /! { @aria-expanded  Indicates the toggled state of the target }
    button tabindex=this.mobileMenu.tabindex class='btn-link' data-js='toggle' aria-controls='aria-c-mobile-menu' aria-expanded='${this.mobileMenu.ariaHidden ? 'false' : 'true' }'
      svg class='icon-wnyc-ui'
        use xlink:href='#icon-wnyc-ui-x'

      span Close

  /! { @aria-label  Ensures landmarks are unique }
  nav class='o-mobile-menu__nav' aria-label='mobile menu'
    /! { @tabindex  Add tabindex="-1" to insure focusable elements are not visible when parent is hidden }
    a tabindex=this.mobileMenu.tabindex href='${this.baseUrl}/demos/programs/index' Programs

    a tabindex=this.mobileMenu.tabindex href='#' Events

    a tabindex=this.mobileMenu.tabindex href='#' Trainings

    / button tabindex=this.mobileMenu.tabindex class='btn-link w-full' data-js='search' aria-controls='aria-c-search' aria-expanded='false'
    /   span Search